<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<xliff version="1.0">
	<file source-language="en" datatype="plaintext" original="messages" date="2013-02-28T10:05:57Z" product-name="dw_content_elements">
		<header/>
		<body>

			<!-- Backend Module Index -->
			<trans-unit id="backend.index.headline">
				<source>Info Seite zur Extension</source>
			</trans-unit>
			<trans-unit id="backend.index.subheadline">
				<source>Erstellen eines Content Elements</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.introduction">
				<source>Zum Erstellen eines Content Elements braucht es nur zwei gleichnamige Dateien: eine Config-Datei und das FLUID-Template. (UpperCamelCase!)</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.config.headline">
				<source>Config-Datei:</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.config.list">
				<source>
					<![CDATA[
						<ul>
							<li>Die Config-Datei wird unter /packages/dw_content_elements_source/Configuration/Elements/E1000MyContentElement.ts angelegt.</li>
							<li>Hier werden alle Konfigurationen gesetzt: Titel Beschreibung, Preview icon, Datenbankfelder und overwriteShowItem.</li>
							<li>Beispiel für eine Config-Datei:<br />
								<code>
									title = E1000 My Content Element<br />
									description = Content Element with header, subheader <br />
									icon = EXT:dw_content_elements_source/Resources/Public/Thumbnails/E1000MyContentElement_icon.png<br />
									fields = header, subheader<br />
									overWriteShowitem = 0<br />
									previewFields = header, subheader<br />
                                    previewListFields = header, subheader<br />
								</code>
							</li>
						</ul>
					]]>
				</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.template.headline">
				<source>FLUID-Template:</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.template.list">
				<source>
					<![CDATA[
						<ul>
							<li>Das FLUID-Template erhält den gleichen Namen wie die Conig-Datei und wird unter /packages/dw_content_elements_source/Resources/Private/Templates/Elements/E1000MyContentElement.html abgelegt</li>
							<li>Das FLUID-Template enthält das Markup zur Frontend-Ausgabe. Die Daten der eingestellen Felder können über die Variabel 'data' ausgelesen (bspw. {data.header}.</li>
							<li>Beispiel für ein FLUID-Template:<br />
								%0s
							</li>
							<li>Jetzt musst du noch einmal den Cache leeren und dann kannst du das Content Element benutzen</li>
						</ul>
					]]>
				</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.irre.headline">
				<source>Erstellen eine IRRE</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.irre.list">
				<source>
					<![CDATA[
						 <ul>
							<li>IRRE Elemente werden innerhalb eines Conten Elements erzeugt. Dieses muss zuvor angelegt werden (siehe oben).</li>
							<li>Um einen Content Element mit eine IRRE zu erweitern musst du folgendes machen.</li>
							<li>In TCA (/packages/dw_content_elements_source/Configuration/TCA/) wird um die IRRE Tabelle Konfig erstellt und das entsprechende TCA in der tt_content Tabelle hinzugefügt. <br />
								Ein entsprechendes Beispiel ist in der tx_dwcontentelementssource_domain_model_listitem.php schon angelegt und kann kopiert werden.</li>
							<li>Die ext_tables.sql (/packages/dw_content_elements_source/ext_tables.sql ) muss um das entsprechende Datenbankfeld des IRRE Elements erweitert werden.</li>
							li>Für den Frontend-Aufruf werden im ElementsController (/packages/dw_content_elements_source/Classes/Controller/ElementsController.php) eine Action mit dem Element Namen und folgender Zeile hinzugefügt:</li>
							<li>$this->view->assign('irreRelations', $this->irreService->getRelations($this->contentObj, 'NAMEDERIRRETABELLE'));</li>
							<li>Hierdurch erhält das FLUID-Template ein Array "irreRelations" welche die Daten der IRRE Tabelle enthalten.</li>
						</ul>
					]]>
				</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.ts.headline">
				<source>TypoScript Settings</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.ts.list">
				<source>
					<![CDATA[
						 <ul>
							<li>TypoScript settings und globale Constanten werden in der setup.txt verwaltet (/packages/dw_content_elements_source/Configuration/TypoScript/setup.txt eintragen).</li>
							<li>Im FLUID-Template können diese mit der Variable "settings" abgefragt werden.</li>
						</ul>
					]]>
				</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.extension.headline">
				<source>Extension Settings</source>
			</trans-unit>
			<trans-unit id="backend.index.documentation.extension.list">
				<source>
					<![CDATA[
						 <ul>
							<li><b>pluginCategory:</b> The plugins category (optgroup) for the CType Select.</li>
							<li><b>controllerActionClass:</b> The class that will be loaded by the TODO data processor to execute the function with the name of the content item to be rendered</li>
							<li><b>elementsPath:</b> The path to the content elements configuration</li>
							<li><b>addElementsToWizard:</b> If true, add a tab with the elements of this provider into the new elements wizard</li>
							<li><b>elementWizardTabTitle:</b> The label of the new elements wizard tab</li>
						</ul>
					]]>
				</source>
			</trans-unit>

			<!-- Backend Module CreateSourceExt-->
			<trans-unit id="backend.createSourceExt.headline">
				<source>Keine Source Extension gefunden!</source>
			</trans-unit>
			<trans-unit id="backend.createSourceExt.error">
				<source>Die Source Extension konnte nicht erstellt werden!</source>
			</trans-unit>
			<trans-unit id="backend.createSourceExt.question.headline">
				<source>Was ist die Source Extension?</source>
			</trans-unit>
			<trans-unit id="backend.createSourceExt.question.text">
				<source>
					<![CDATA[
						In der Source Extension können Sie ihre Content Elemente erstellen und Versionieren (z.B. über GIT).
						<br/>
						Die Source Extension wird zwingent für Dw Content Elements benötigt, da diese Extension von sich
						<br/>
						aus keine eigenen Content Elemente mit bringt.
					]]>
				</source>
			</trans-unit>
			<trans-unit id="backend.createSourceExt.create">
				<source>Die Source Extension erstellen.</source>
			</trans-unit>

			<!-- Backend Module LoadSourceExt -->
			<trans-unit id="backend.loadSourceExt.headline">
				<source>Die Source Extension ist zurzeit nicht installiert.</source>
			</trans-unit>
			<trans-unit id="backend.loadSourceExt.hasCreatedSourceExt">
				<source>Die Source Extension wurde erfolgreich erstellt.</source>
			</trans-unit>
			<trans-unit id="backend.loadSourceExt.text">
				<source>Bitte installiern Sie diese Extension damit Ihre Content Elemente geladen werden können.</source>
			</trans-unit>
			<trans-unit id="backend.loadSourceExt.install.headline">
				<source>Zum Installieren:</source>
			</trans-unit>
			<trans-unit id="backend.loadSourceExt.install.step.one">
				<source>1. Klicken Sie im Backend auf den Erweiterungsmanager.</source>
			</trans-unit>
			<trans-unit id="backend.loadSourceExt.install.step.two">
				<source>2. Suchen Sie nach der Extension "Content Elements Source (dw_content_elements_source)".</source>
			</trans-unit>
			<trans-unit id="backend.loadSourceExt.install.step.three">
				<source>3. Installieren Sie diese Extension (Klick auf den Grauen Legostein).</source>
			</trans-unit>
			<trans-unit id="backend.loadSourceExt.install.step.four">
				<source>Nun werden Ihre Content Elemente geladen.</source>
			</trans-unit>
            <trans-unit id="backend.loadSourceExt.install.composermode.headline">
                <source>Achtung im Composer Mode!</source>
            </trans-unit>
            <trans-unit id="backend.loadSourceExt.install.composermode.list">
                <source>
                    <![CDATA[
						<ul>
                            <li>Im Composer Mode werden die Klassen Ihrer Source Extension nicht geladen.</li>
                            <li>Damit diese geladen werden müssen sie in Ihrer <strong>Composer.json</strong> folgendes hinzufügen: <br />
                                <code>
                                    "autoload": {<br />
                                        "psr-4": {<br />
                                            "Denkwerk\\DwContentElementsSource\\": "typo3conf/ext/dw_content_elements_source/Classes"<br />
                                        }<br />
                                    }
                                </code>
                            </li>
                        </ul>
					]]>
                </source>
            </trans-unit>

		</body>
	</file>
</xliff>
